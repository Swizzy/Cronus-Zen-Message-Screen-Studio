name: Build and Publish

on:
  push:
    branches:
      - master
      - dev
  pull_request:
    branches:
      - master
      - dev

jobs:
  build:
    runs-on: windows-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup .NET 8
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: '8.0.x'

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v0.11.0
        with:
          versionSpec: '5.x'

      - name: Determine Version
        id: gitversion
        uses: gittools/actions/gitversion/execute@v0.11.0

      - name: Restore dependencies
        run: dotnet restore "Cronus Zen Message Screen Studio/Cronus Zen Message Screen Studio.csproj"

      - name: Build
        run: dotnet build "Cronus Zen Message Screen Studio/Cronus Zen Message Screen Studio.csproj" --configuration Release --no-restore

      - name: Publish single file executable
        run: dotnet publish "Cronus Zen Message Screen Studio/Cronus Zen Message Screen Studio.csproj" --configuration Release --self-contained true -p:PublishSingleFile=true -p:RuntimeIdentifier=win-x64 -o ./publish

      - name: Rename exe to include version
        run: |
          $exe = Get-ChildItem ./publish/*.exe | Select-Object -First 1
          $newName = "CronusZenMessageScreenStudio-v${{ steps.gitversion.outputs.semVer }}.exe"
          Rename-Item $exe.FullName -NewName $newName

      - name: Get published exe name
        id: get_exe
        run: echo "exe_name=CronusZenMessageScreenStudio-v${{ steps.gitversion.outputs.semVer }}.exe" >> $env:GITHUB_OUTPUT

      - name: Create GitHub Release
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          files: ./publish/${{ steps.get_exe.outputs.exe_name }}
          tag_name: v${{ steps.gitversion.outputs.semVer }}
          name: Release v${{ steps.gitversion.outputs.semVer }}
          draft: false
          prerelease: ${{ github.ref != 'refs/heads/master' }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Upload published artifact
        uses: actions/upload-artifact@v4
        with:
          name: Cronus Zen Message Screen Studio
          path: ./publish
